{
	"info": {
		"_postman_id": "c80f0503-267e-4fb1-85ef-4387add54324",
		"name": "gs-devops",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33326410"
	},
	"item": [
		{
			"name": "cadastro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"nome\": \"teste-devops\",\n  \"email\": \"teste-devops@gmail.com\",\n  \"rg\": 601478540,\n  \"cpf\": 12332141408,\n  \"senha\": \"senha\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://4.228.15.203:8080/cadastro",
					"protocol": "http",
					"host": [
						"4",
						"228",
						"15",
						"203"
					],
					"port": "8080",
					"path": [
						"cadastro"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"teste-devops@gmail.com\",\n  \"senha\": \"senha\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://4.228.15.203:8080/cadastro/login",
					"protocol": "http",
					"host": [
						"4",
						"228",
						"15",
						"203"
					],
					"port": "8080",
					"path": [
						"cadastro",
						"login"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "ReadAll cadastro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6ImxpdmlhQGdtYWlsLmNvbSIsImV4cCI6MTczMjA0NTUxMH0.m0xJ96kpXORqYymld_IrrVA0WCNO0irvCIEk6fmfVHg",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://4.228.15.203:8080/cadastro",
					"protocol": "http",
					"host": [
						"4",
						"228",
						"15",
						"203"
					],
					"port": "8080",
					"path": [
						"cadastro"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Update cadastro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6InRlc3RlLWRldm9wc0BnbWFpbC5jb20iLCJleHAiOjE3MzIyNDk4MzN9.f-KSUJkhZ6fwAxUucfni0H0nrY1oKfaPbGlP9VztN2I",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"nome\": \"atualizado\",\n  \"email\": \"emailatualizado@gmail.com\",\n  \"rg\": 101233214,\n  \"cpf\": 12332141408,\n  \"senha\": \"senha\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://4.228.15.203:8080/cadastro/6",
					"protocol": "http",
					"host": [
						"4",
						"228",
						"15",
						"203"
					],
					"port": "8080",
					"path": [
						"cadastro",
						"6"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "ReadById cadastro",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6ImxpdmlhQGdtYWlsLmNvbSIsImV4cCI6MTczMjA0NTUxMH0.m0xJ96kpXORqYymld_IrrVA0WCNO0irvCIEk6fmfVHg",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://4.228.15.203:8080/cadastro/1",
					"protocol": "http",
					"host": [
						"4",
						"228",
						"15",
						"203"
					],
					"port": "8080",
					"path": [
						"cadastro",
						"1"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete cadastro Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6ImVtYWlsYXR1YWxpemFkb0BnbWFpbC5jb20iLCJleHAiOjE3MzIyNTAxMTN9.UtoEprTtUgdRupPXvXeOKadjZglUAfvmpZOzs_sFHC0",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://4.228.15.203:8080/cadastro/6",
					"protocol": "http",
					"host": [
						"4",
						"228",
						"15",
						"203"
					],
					"port": "8080",
					"path": [
						"cadastro",
						"6"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		}
	]
}